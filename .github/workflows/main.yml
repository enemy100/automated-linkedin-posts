name: Extract content to Notion

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour on the hour
  workflow_dispatch:  # Allows manual trigger

jobs:
  extract-feeds:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # allow write access to repository contents

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-full python3-pip

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      working-directory: ./extractor

    - name: Create necessary directories
      run: |
        mkdir -p logs
        mkdir -p raw_feeds
      working-directory: ./extractor

    - name: Create environment file
      run: |
        echo "NOTION_API_TOKEN=${{ secrets.NOTION_API_TOKEN }}" > .env
        echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> .env
      working-directory: ./extractor

    - name: Verify file structure
      run: |
        pwd
        ls -la
        echo "Current directory contents:"
        ls -R
      working-directory: ./extractor

    - name: Run feed processor
      run: |
        python sec-feed-extract.py
      working-directory: ./extractor

    - name: Upload logs as artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: execution-logs-${{ github.run_number }}
        path: |
          extractor/logs/
          extractor/raw_feeds/
        retention-days: 7

    - name: Check for feed updates
      id: check-updates
      run: |
        if [[ -n $(git status --porcelain extractor/Config.txt) ]]; then
          echo "has_updates=true" >> $GITHUB_OUTPUT
          git status -- extractor/Config.txt
        else
          echo "has_updates=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit feed timestamps
      if: steps.check-updates.outputs.has_updates == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add extractor/Config.txt
        git commit -m "Update feed timestamps [skip ci]"
        git push origin HEAD:main

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Feed Extraction Failed',
            body: `Feed extraction failed in run #${context.runNumber}. Please check the logs for details.`
          })
